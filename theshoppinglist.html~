<!DOCTYPE html>
<html>
<head>
<link rel="stylesheet" type="text/css" href="ostoslista.css">
<meta name="viewport" content="width=320">
<script>

function getCookie(cname) {
  var name = cname + "=";
  var ca = document.cookie.split(';');
  for(var i=0; i<ca.length; i++) {
    var c = ca[i].trim();
    if (c.indexOf(name) == 0) return c.substring(name.length, c.length);
  }
  return "";
}

function setCookie(cname,cvalue,exdays) {
  var d = new Date();
  d.setTime(d.getTime() + (exdays*24*60*60*1000));
  var expires = "expires=" + d.toGMTString();
  document.cookie = cname+"="+cvalue+"; "+expires+"; domain=nykanen.github.io; path=/";
}

function getType(index) {
  var n = type.charCodeAt(index);
  return n;
}

function convertType(t) {
  var typelist = {bakery:"b",dairy:"d",dry:"D",drinks:"r",fish:"f",greens:"g",hyg:"h",meat:"m"};
  return typelist[t];
}

function getClass(n) {
  switch (n) {
    case "b".charCodeAt(0): //Bakery
      return "bakery";
      break;
    case "d".charCodeAt(0): //Dairy
      return "dairy";
      break;
    case "D".charCodeAt(0): //Dry
      return "dry";
      break;
    case "r".charCodeAt(0): //Drinks
      return "drinks";
      break;
    case "f".charCodeAt(0): //Fish
      return "fish";
      break;
    case "g".charCodeAt(0): //Greens
      return "greens";
      break;
    case "h".charCodeAt(0): //Hygiene
      return "hyg";
      break;
    case "m".charCodeAt(0): //Meat
      return "meat";
      break;
  }  
}

var entries;

//Default entries
entries = [
{item:'Milk',type:'dairy',unit:'l',amount:1,active:false},
{item:'Cheese',type:'dairy',unit:'pkg',amount:1,active:false},
{item:'Bread',type:'bakery',unit:'pkg',amount:1,active:false},
{item:'Toast',type:'bakery',unit:'pkg',amount:1,active:false},
{item:'Minced meat',type:'meat',unit:'g',amount:500,active:false},
{item:'Cream',type:'dairy',unit:'dl',amount:2,active:false},
{item:'Fresh cheese',type:'dairy',unit:'pkg',amount:1,active:false},
{item:'Cola',type:'drinks',unit:'l',amount:1.5,active:false},
{item:'Orange juice',type:'drinks',unit:'l',amount:1,active:false},
{item:'Apple juice',type:'drinks',unit:'l',amount:1,active:false},
{item:'Sparkling water',type:'drinks',unit:'l',amount:1,active:false},
{item:'Still water',type:'drinks',unit:'l',amount:1,active:false},
{item:'Beer',type:'drinks',unit:'l',amount:0.5,active:false},
{item:'Sausage',type:'meat',unit:'-',amount:1,active:false},
{item:'Chicken filet',type:'meat',unit:'g',amount:500,active:false},
{item:'Pork chops',type:'meat',unit:'g',amount:500,active:false},
{item:'Salmon',type:'fish',unit:'kg',amount:1,active:false},
{item:'Shrimps',type:'fish',unit:'g',amount:250,active:false},
{item:'Trout',type:'fish',unit:'kg',amount:1,active:false},
{item:'Herring',type:'fish',unit:'g',amount:500,active:false},
{item:'Tuna',type:'fish',unit:'g',amount:500,active:false},
{item:'Sushi',type:'fish',unit:'-',amount:1,active:false},
{item:'Potatoes',type:'greens',unit:'kg',amount:1,active:false},
{item:'Apples',type:'greens',unit:'kg',amount:0.5,active:false},
{item:'Cucumber',type:'greens',unit:'kg',amount:0.5,active:false},
{item:'Tomatoes',type:'greens',unit:'kg',amount:0.5,active:false},
{item:'Oranges',type:'greens',unit:'kg',amount:0.5,active:false},
{item:'Spam',type:'meat',unit:'g',amount:500,active:false},
{item:'Toothpaste',type:'hyg',unit:'pkg',amount:1,active:false},
{item:'Soap',type:'hyg',unit:'-',amount:1,active:false},
{item:'Shampoo',type:'hyg',unit:'-',amount:1,active:false},
{item:'Shower gel',type:'hyg',unit:'-',amount:1,active:false},
{item:'Toilet paper',type:'hyg',unit:'-',amount:1,active:false},
{item:'Toothbrush',type:'hyg',unit:'-',amount:1,active:false},
{item:'Penne',type:'dry',unit:'g',amount:500,active:false},
{item:'Rice',type:'dry',unit:'kg',amount:1,active:false},
{item:'Wheat flour',type:'dry',unit:'kg',amount:1,active:false}
]

//Required for loading a saved shopping list
function entriesIndex(item) {
  for (i = 0; i < entries.length; i++) {
    if (entries[i].item == item) {
      return i;
      break;
    }
  }
  return -1;
}

//Sorting function for object array
// http://stackoverflow.com/questions/1129216/sorting-objects-in-an-array-by-a-field-value-in-javascript
function compare(a,b) {
  if (a.item < b.item)
     return -1;
  if (a.item > b.item)
    return 1;
  return 0;
}

var type;
var items = [];

function getIndex(item) {
  var index = items.indexOf(item);
  return index;
}

function loadList() {
  var itemsRaw = getCookie("items");
  if (itemsRaw != "") {
    items = itemsRaw.split(":");
    var amountsRaw = getCookie("amounts");
    var amounts = amountsRaw.split(":");
    var unitsRaw = getCookie("units");
    var units = unitsRaw.split(":");
    type = getCookie("type");
    var x;
    for (x in items) { // x is the index
      var a = amounts[x];
      var u = units[x];
      var i = items[x];
      var y = entriesIndex(i);
      if (y != -1) {
        entries[y].amount = a;
        entries[y].unit = u;
        entries[y].active = true;
      } else {
        var entry = {};
        var t = getType(x);
        var c = getClass(t);
        entry.item = i;
        entry.type = c;
        entry.unit = u;
        entry.amount = a;
        entry.active = true;
        entries.push(entry);
      }
    }
  }
  entries.sort(compare);
  items = [];
  for (x in entries) {
    items[x] = entries[x].item;
  }
}

function getEntryText(item) {
  var index = getIndex(item);
  var a = entries[index].amount;
  var u = entries[index].unit;
  var i = item;
  var txt;
  if (u == "-") {
    if (a == 1) {
      txt = i; // a=1 u=- => txt = item
    } else {
      txt = a + " " + i; // a!=1 u=- => txt= a item
    }
  } else {
    txt = a + u + " " + item; // u!=- => txt = au item
  }
  return txt;
}

var checkList = [];

function check(e,item) {
//  var entryId = item + "ID";
  var index = getIndex(item);
//  var e = document.getElementById(entryId);
  var cn = e.className;
  if (cn != "checked") {
    e.className = "checked";
  } else {
    e.className = entries[index].type;
  }
/*  var checkIndex = checkList.indexOf(item);
  if (checkIndex == -1) {
    checkList.push(item);
  } else {
    checkList.splice(checkIndex,1);
  }*/
}

var state = "view";

var editItem = "";
var editType= "";

function itemClick() {
  var itemId = this.id;
  var item = itemId.slice(0,-2);
  editItem = item;
  var index = getIndex(item);
  editType = entries[index].type;
  if (entries[index].active) {
    if (state=="view") {
      check(this,item);
    } else {
      promptView(item);
    }
  } else {
    editEntry();
  }
}

function showMain(b) {
  var main;
  var side;
  if (b) {
    main = "block";
    side = "none";
  } else {
    main = "none";
    side = "block";
  }
  document.getElementById("mainView").style.display=main;
  document.getElementById("sideView").style.display=side;
}

function showForm(b) {
  var show;
  if (b) {
    show = "inline";
  } else {
    show = "none";
  }
  document.getElementById("theForm").style.display=show;
  document.getElementById("addentry").style.display=show;
}

function showPrompt(b) {
  var show;
  if (b) {
    show = "block";
  } else {
    show = "none";
  }
  document.getElementById("editentry").style.display=show;
  document.getElementById("removeentry").style.display=show;
}

function promptView(item) {
  showMain(false);
  showForm(false);
  showPrompt(true);
  var div = document.getElementById("sideView");
  var h = document.getElementById("sidehead");
  h.className = "menu";
  h.innerHTML = getEntryText(item);
  var p1 = document.getElementById("editentry");
  p1.className = "prompt";
  p1.innerHTML = "Edit entry";
  p1.addEventListener("click",editEntry,false);
  var p2 = document.getElementById("removeentry");
  p2.className = "prompt";
  p2.innerHTML = "Remove entry";
  p2.addEventListener("click",removeEntry,false);
  var p3 = document.getElementById("cancel");
  p3.className = "prompt";
  p3.innerHTML = "Cancel";
  p3.addEventListener("click",editView,false);
}

function removeEntry() { //TODO: check if the div has children after the removal
  var item = editItem;
  var index = getIndex(item);
  entries[index].amount = 1;
  entries[index].unit = "-";
  entries[index].active = false;
  var type = entries[index].type;
  var nActiveEntries = 0;
  for (x in entries) {
    if (entries[x].type == type) {
      if (entries[x].active) {
        nActiveEntries += 1;
      }
    }
  }
  if (nActiveEntries == 0) {
    document.getElementById(type+"Head").className = "edit";
  }
  var entryID = item + "ID";
  var e = document.getElementById(entryID);
  e.innerHTML = item;
  e.className = "edit";
  writeCookie();
  editView();
}

function editView() {
  showMain(true);
  document.getElementById("notification").style.display = "none";
  var elements = document.getElementsByClassName("edit");
  for (i=0; i<elements.length; i++) {
    elements[i].style.display = "block";
  }
  document.getElementById("title").innerHTML="Edit List";
  document.getElementById("navi").innerHTML="Home";
}

function editEntry() {//TODO
  showMain(false);
  showForm(true);
  showPrompt(false);
  var item = editItem;
  var index = getIndex(item);
  var a = entries[index].amount;
  var u = entries[index].unit;
  var t = entries[index].type;
  var h = document.getElementById("sidehead");
  h.innerHTML = "Edit Entry";
  var itemInput = document.getElementById("inputItem");
  itemInput.value = item;
  var amountInput = document.getElementById("inputAmount");
  amountInput.value = a;
  var unitInput = document.getElementById("inputUnit");
  unitInput.value = u;
  if (u == "-") {
//    unitInput.setAttribute("value",u);
//  } else {
    unitInput.setAttribute("placeholder","l, kg, ...");
  }
  var p1 = document.getElementById("addentry");
  p1.className = "button";
  p1.innerHTML = "Add entry";
  p1.addEventListener("click",addEntry,false);
  var p2 = document.getElementById("cancel");
  p2.className = "button";
  p2.innerHTML = "Cancel";
  p2.addEventListener("click",editView,false);
}

function addEntry() {
  //Read input fields
  var item = document.getElementById("inputItem").value;
  var amount = document.getElementById("inputAmount").value;
  var unit = document.getElementById("inputUnit").value;
  if (unit == "") {
    unit = "-";
  }
  var type = editType;
  //Make the heading visible
  document.getElementById(type+"Head").className="view";
  var index = getIndex(item);
  if (index == -1) { //add a new item
    var entry = {};
    entry.item = item;
    entry.amount = amount;
    entry.unit = unit;
    entry.type = type;
    entry.active = true;
    entries.push(entry);
    entries.sort(compare);
    items = [];
    for (x in entries) {
      items[x] = entries[x].item;
    }
    addNewItem(item);
  } else { //edit an old item
    entries[index].amount = amount;
    entries[index].unit = unit;
    entries[index].active = true;
    itemId = item + "ID";
    var e = document.getElementById(itemId);
    e.innerHTML = getEntryText(item);
    e.className = entries[index].type;
  }
  writeCookie();  
  editView();
}

function addNewItem(item) {
  var index = getIndex(item);
  var type = entries[index].type;
  var entriesOfAType = []; //indices of items of a type type
  var itemsOfAType = []; //list_of_items of a type type
  for (x in entries) {
    if (entries[x].type == type) {
      entriesOfAType.push(x);
      itemsOfAType.push(entries[x].item);
    }
  }
  var typeIndex = itemsOfAType.indexOf(item); //index of the item in the list_of_items
  var div = document.getElementById(type);
  var p = document.createElement("p");
  p.innerHTML = getEntryText(item);
  p.className = type;
  p.id = item + "ID";
  p.addEventListener("click",itemClick,false);
  var lastIndex = itemsOfAType.length - 1;
  if (itemsOfAType.length == 1 || typeIndex == lastIndex) {
    div.appendChild(p);
  } else {
    var next = itemsOfAType[typeIndex + 1];
    var nextId = next + "ID";
    var pn = document.getElementById(nextId);
    div.insertBefore(p,pn);
  }
}

function writeCookie() {
  var itemsEntry = "";
  var amountsEntry = "";
  var unitsEntry = "";
  var typesEntry = "";
  var first = true;
  for (x in entries) {
    if (entries[x].active == true) {
      var typeCode = convertType(entries[x].type);
      typesEntry = typesEntry + typeCode;
      if (first) {
        itemsEntry = entries[x].item;
        amountsEntry = entries[x].amount;
        unitsEntry = entries[x].unit;
        first = false;
      } else {
        itemsEntry = itemsEntry + ":" + entries[x].item;
        amountsEntry = amountsEntry + ":" + entries[x].amount;
        unitsEntry = unitsEntry + ":" + entries[x].unit;
      }
    }
  }
  setCookie("items",itemsEntry,100);
  setCookie("amounts",amountsEntry,100);
  setCookie("units",unitsEntry,100);
  setCookie("type",typesEntry,100);
}

function makeEntry(entry) {
  var i = entry.item;
  var t = entry.type;
  var p = document.createElement("p");
  var entryId = i + "ID";
  if (entry.active) {
    p.className = t; //Set the class of the entry (affects visibility)
    var headID = t + "Head";
    document.getElementById(headID).className = "view"; //Set the class of the head
    var txt = getEntryText(i);
    p.innerHTML = txt;
    p.id = entryId;
    p.addEventListener("click",itemClick,false);
    var div = document.getElementById(t);
    div.appendChild(p);
  } else {
    p.className = "edit";
    p.innerHTML = i;
    p.id = entryId;
    p.addEventListener("click",itemClick,false);
    var div = document.getElementById(t);
    div.appendChild(p);
  }
}

function showNotification() {
  var p = document.getElementById("notification");
  p.innerHTML = "You have no shopping list. Create a new list!";
  p.addEventListener("click",editView,false);
  p.style.color = "white";
}



function switchView() {
  if (state=="view") {
    editView();
    state = "edit";
  } else {
    var elements = document.getElementsByClassName("edit");
    for (i=0; i<elements.length; i++) {
      elements[i].style.display = "none";
    }
    document.getElementById("title").innerHTML="The Shopping List";
    document.getElementById("navi").innerHTML="Edit";
    state = "view";
  }
}

function makePage() {
  showMain(true);
  loadList();
  state = "view";
  for (i in entries) {
    makeEntry(entries[i]);
  }
//  addAction();
  var elements = document.getElementsByClassName("edit");
  for (i=0; i<elements.length; i++) {
    elements[i].style.display = "none";
  }
  var nActive = 0;
  for (x in entries) {
    if (entries[x].active) {
      nActive += 1;
    }
  }
  if (nActive == 0) {  
    showNotification();
  }
}

function printEntries() {
  document.getElementById("out").innerHTML=items.toSource();
}

//TODO
//menu: Clear
//addCustomEntry()

</script>
</head>
<body onload="makePage()">

<div id ="mainView" class="main">
<h1 class="menu" id="title">The Shopping List</h1>
<p class="menu"><span id="navi" onclick="switchView()">Edit</span><span>Clear</span><br></p>

<p id="notification"></p>

<h1 class="edit" id="bakeryHead">Bakery products</h1>
<div id="bakery"></div>

<h1 class="edit" id="dairyHead">Dairy products</h1>
<div id="dairy"></div>

<h1 class="edit" id="drinksHead">Drinks</h1>
<div id="drinks"></div>

<h1 class="edit" id="dryHead">Dry goods</h1>
<div id="dry"></div>

<h1 class="edit" id="fishHead">Fish</h1>
<div id="fish"></div>

<h1 class="edit" id="greensHead">Fruits and vegetables</h1>
<div id="greens"></div>

<h1 class="edit" id="hygHead">Hygiene products</h1>
<div id="hyg"></div>

<h1 class="edit" id="meatHead">Meat products</h1>
<div id="meat"></div>

</div>
<div id="sideView" class="side">
<h1 class="menu" id="sidehead"></h1>
<form id="theForm" style="color:white;">
<label>Item:</label><input class="input" id="inputItem"><br>
<label>Amount:</label><input class="input" id="inputAmount"><br>
<label>Unit:</label><input class="input" id="inputUnit"><br>
</form>
<div id="buttons">
<p id="editentry"></p>
<p id="removeentry"></p>
<p id="addentry"></p>
<p id="cancel"></p>
</div>
</div>
<!--div id="log">
<p onclick="printEntries()">Print Entries</p>
<div id ="out"></div>
</div-->
</body>

